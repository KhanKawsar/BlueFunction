shadecol= c("red", "royalblue", "black", "green"),
xlab= "Wavelength (nm)", ylab= "Reflactance (%)", cex.lab = 1.5, cex.axis= 1.5)
mtext("(c)", side=3, line=0.5, adj=0, cex=1.0)
names
bysic1
library(pavo)
par(mar=c(5,4,1,1), mgp= c(2.5,1,0))
aggblue<- read.csv("Data/aggblue.csv")
aggvlue <- as.rspec(aggblue)
aggsmooth <- procspec(aggvlue, opt = 'smooth', span= 0.5)
names<- names(aggsmooth)
bysic1 <- gsub("^sample[0-9].",'', names)
aggplot(aggsmooth, bysic1, lwd= 2, lcol= c("red", "royalblue", "black", "seagreen"),
shadecol= c("red", "royalblue", "black", "green"),legend = TRUE,
xlab= "Wavelength (nm)", ylab= "Reflactance (%)", cex.lab = 1.5, cex.axis= 1.5)
mtext("(c)", side=3, line=0.5, adj=0, cex=1.0)
library(pavo)
par(mar=c(5,4,1,1), mgp= c(2.5,1,0))
aggblue<- read.csv("Data/aggblue.csv")
aggvlue <- as.rspec(aggblue)
aggsmooth <- procspec(aggvlue, opt = 'smooth', span= 0.5)
names<- names(aggsmooth)
bysic1 <- gsub("^sample[0-9].",'', names)
aggplot(aggsmooth, bysic1, lwd= 2, lcol= c("red", "royalblue", "black", "seagreen"),
shadecol= c("red", "royalblue", "black", "green"),legend = c("male","painted female", "female", "background"),
xlab= "Wavelength (nm)", ylab= "Reflactance (%)", cex.lab = 1.5, cex.axis= 1.5)
mtext("(c)", side=3, line=0.5, adj=0, cex=1.0)
?legend
library(pavo)
par(mar=c(5,4,1,1), mgp= c(2.5,1,0))
aggblue<- read.csv("Data/aggblue.csv")
aggvlue <- as.rspec(aggblue)
aggsmooth <- procspec(aggvlue, opt = 'smooth', span= 0.5)
names<- names(aggsmooth)
bysic1 <- gsub("^sample[0-9].",'', names)
aggplot(aggsmooth, bysic1, lwd= 2, lcol= c("red", "royalblue", "black", "seagreen"),
shadecol= c("red", "royalblue", "black", "green"),leg.txt = c("male","painted female", "female", "background"),
xlab= "Wavelength (nm)", ylab= "Reflactance (%)", cex.lab = 1.5, cex.axis= 1.5)
mtext("(c)", side=3, line=0.5, adj=0, cex=1.0)
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue Function Figure 2.R')
par(mar)
?par(mar)
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
?axis
?barplot
?par
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
?barplot
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
?par(mar)
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue function Figure 3.R')
source('F:/Blue function/R/Blue Function Figure 2.R')
?chisq.test
observed = c(27, 13)
expected = c(20, 20)
chisq.test(x = observed,
p = expected)
?fisher.test
mat<- matrix(40, 27, 40, 13)
fisher.test(mat)
fisher.test(mat, alternative = "greater")
mat<- matrix(40, 27, 40, 13), byrow= TRUE
mat<- (matrix= c(40, 27, 40, 13), byrow= TRUE)
mat<- (matrix= c(40, 27, 40, 13) byrow= TRUE)
mat<- (matrix= c(40, 27, 40, 13), byrow= TRUE)
?matrix
mat<- (matrix= c(40, 27, 40, 13), 2,2, byrow= TRUE)
mat<- (matrix = c(40, 27, 40, 13), 2,2, byrow= TRUE)
mat
R1 = c(27, 13)
R2 = c(13, 27)
rows   = 2
Matriz = matrix(c(R1, R2),
nrow=rows,
byrow=TRUE)
rownames(Matriz) = c("noblue", "blue")
colnames(Matriz) = c("mate", "nomate")
Matriz
chisq.test(Matriz,
correct=TRUE)
chisq.test(Matriz,
correct=FALSE)
?chisq.test
R1 = c(27, 13)
R2 = c(13, 27)
rows   = 2
Matriz = matrix(c(R1, R2),
nrow=rows,
byrow=TRUE)
rownames(Matriz) = c("noblue", "blue")
colnames(Matriz) = c("tandem", "notandem")
Matriz
chisq.test(Matriz,correct=TRUE)
R1 = c(27, 13)
R2 = c(13, 27)
rows   = 2
Matriz = matrix(c(R1, R2),
nrow=rows,
byrow=TRUE)
rownames(Matriz) = c("noblue", "blue")
colnames(Matriz) = c("tandem", "notandem")
Matriz
chisq.test(Matriz,correct=TRUE, rescale.p = 1)
R1 = c(27, 13)
R2 = c(13, 27)
rows   = 2
Matriz = matrix(c(R1, R2),
nrow=rows,
byrow=TRUE)
rownames(Matriz) = c("noblue", "blue")
colnames(Matriz) = c("tandem", "notandem")
Matriz
chisq.test(Matriz,correct=FALSE, rescale.p = 1)
pageWidthLarge<- 7.08661
pageHeightLarge <- paperWidthLarge * 1.5
pagePaper <- 'special'
fontFamily <- 'Times'
layout(matrix(c(1,1,2,2,3,4), nrow=3,ncol=2,byrow =  TRUE), heights = c(0.6,1,1))
#####To upload a photo in R #### (A)
library(jpeg)
image<- readJPEG("Data/collage.jpg")
pixelWidth <- dim(image)[2]
pixelHeight <- dim(image)[1]
par(mar=c(0,0,0,0))
#Setup a plot region with domain and range from 0 to 2, and no axes or labels
plot(NULL, xlim=c(0,pixelWidth), ylim=c(0,pixelHeight), axes=FALSE,xlab= "" , ylab="", asp= 1)
#Draw the raster image across (half y space and whole x space);
#trial and error based, the photo has long x axis but small y axis
#....rasterImage(image, xleft, ybottom, xright, ytop,)
rasterImage(image, 0,0,pixelWidth,pixelHeight)
mtext("(a)", side = 3, line = -3, adj= 0.09, cex=1.0)
mtext("(b)", side = 3, line = -3, adj= 0.55, cex=1.0)
##For aggspectra (B)
library(pavo)
par(mar=c(5,4,1,1), mgp= c(2.5,1,0))
aggblue<- read.csv("Data/aggblue.csv")
aggvlue <- as.rspec(aggblue)
aggsmooth <- procspec(aggvlue, opt = 'smooth', span= 0.5)
names<- names(aggsmooth)
bysic1 <- gsub("^sample[0-9].",'', names)
aggplot(aggsmooth, bysic1, lwd= 2, lcol= c("red", "royalblue", "black", "seagreen"),
shadecol= c("red", "royalblue", "black", "green"),
xlab= "Wavelength(nm)", ylab= "Reflactance(%)", cex.lab = 1.5, cex.axis= 1.5)
mtext("(c)", side=3, line=0.5, adj=0, cex=1.0)
#Fox chromatic and achratic boxplot (C-D)
blueFunctionData<- read.csv("Data/blueFunctionData.csv")
boxplot(blueFunctionData$chromaticMale, blueFunctionData$chromaticFemale,
ylab=expression('Chromatic discriminability (D'['S']*')'),
names = FALSE, outline= FALSE, cex.lab= 1.5,cex.axis= 1.5,
col= c("lightpink4", "lavenderblush3"), boxwex=0.15,staplewex= 0.3,
at= c(0.1,0.4), ylim= c(0,0.6), xlim= c(0, 0.5), mgp= c(2.5,1,0))
text(0.25, 0.55, "*", cex=2.0)
mtext(c("male", "female"), at= c(0.1, 0.4), side =1, line = 2, cex = 1.5*par()$cex)
mtext("(d)", side=3, line=0.5, adj=0, cex=1.0)
boxplot(blueFunctionData$achromaticMale, blueFunctionData$achromaticFemale,
ylab=expression('Achromatic discriminability (D'['L']*')'), names = FALSE, outline= FALSE,
col= c("lightpink4", "lavenderblush3"), cex.lab = 1.5,cex.axis= 1.5,
boxwex=0.15,staplewex= 0.3, at= c(0.1,0.4), ylim= c(0,0.8), xlim= c(0, 0.5), mgp= c(2.5,1,0))
mtext(c("male", "female"), at= c(0.1, 0.4), side =1, line = 2, cex = 1.5*par()$cex)
mtext("(e)", side=3, line=0.5, adj=0, cex=1.0)
########################Figure 1##########################################################
pageWidthLarge<- 7.08661
pageHeightLarge <- paperWidthLarge * 1.5
pagePaper <- 'special'
fontFamily <- 'Times'
png("output/Figure_1.pdf", width=pageWidthLarge, height= pageHeightLarge, family=fontFamily, paper=pagePaper)
layout(matrix(c(1,1,2,2,3,4), nrow=3,ncol=2,byrow =  TRUE), heights = c(0.6,1,1))
#####To upload a photo in R #### (A)
library(jpeg)
image<- readJPEG("Data/collage.jpg")
pixelWidth <- dim(image)[2]
pixelHeight <- dim(image)[1]
par(mar=c(0,0,0,0))
#Setup a plot region with domain and range from 0 to 2, and no axes or labels
plot(NULL, xlim=c(0,pixelWidth), ylim=c(0,pixelHeight), axes=FALSE,xlab= "" , ylab="", asp= 1)
#Draw the raster image across (half y space and whole x space);
#trial and error based, the photo has long x axis but small y axis
#....rasterImage(image, xleft, ybottom, xright, ytop,)
rasterImage(image, 0,0,pixelWidth,pixelHeight)
mtext("(a)", side = 3, line = -3, adj= 0.09, cex=1.0)
mtext("(b)", side = 3, line = -3, adj= 0.55, cex=1.0)
##For aggspectra (B)
library(pavo)
par(mar=c(5,4,1,1), mgp= c(2.5,1,0))
aggblue<- read.csv("Data/aggblue.csv")
aggvlue <- as.rspec(aggblue)
aggsmooth <- procspec(aggvlue, opt = 'smooth', span= 0.5)
names<- names(aggsmooth)
bysic1 <- gsub("^sample[0-9].",'', names)
aggplot(aggsmooth, bysic1, lwd= 2, lcol= c("red", "royalblue", "black", "seagreen"),
shadecol= c("red", "royalblue", "black", "green"),
xlab= "Wavelength(nm)", ylab= "Reflactance(%)", cex.lab = 1.5, cex.axis= 1.5)
mtext("(c)", side=3, line=0.5, adj=0, cex=1.0)
#Fox chromatic and achratic boxplot (C-D)
blueFunctionData<- read.csv("Data/blueFunctionData.csv")
boxplot(blueFunctionData$chromaticMale, blueFunctionData$chromaticFemale,
ylab=expression('Chromatic discriminability (D'['S']*')'),
names = FALSE, outline= FALSE, cex.lab= 1.5,cex.axis= 1.5,
col= c("lightpink4", "lavenderblush3"), boxwex=0.15,staplewex= 0.3,
at= c(0.1,0.4), ylim= c(0,0.6), xlim= c(0, 0.5), mgp= c(2.5,1,0))
text(0.25, 0.55, "*", cex=2.0)
mtext(c("male", "female"), at= c(0.1, 0.4), side =1, line = 2, cex = 1.5*par()$cex)
mtext("(d)", side=3, line=0.5, adj=0, cex=1.0)
boxplot(blueFunctionData$achromaticMale, blueFunctionData$achromaticFemale,
ylab=expression('Achromatic discriminability (D'['L']*')'), names = FALSE, outline= FALSE,
col= c("lightpink4", "lavenderblush3"), cex.lab = 1.5,cex.axis= 1.5,
boxwex=0.15,staplewex= 0.3, at= c(0.1,0.4), ylim= c(0,0.8), xlim= c(0, 0.5), mgp= c(2.5,1,0))
mtext(c("male", "female"), at= c(0.1, 0.4), side =1, line = 2, cex = 1.5*par()$cex)
mtext("(e)", side=3, line=0.5, adj=0, cex=1.0)
dev.off()
?png
########################Figure 1##########################################################
pageWidthLarge<- 7.08661
pageHeightLarge <- paperWidthLarge * 1.5
pagePaper <- 'special'
fontFamily <- 'Times'
png("output/Figure_1.png", width=pageWidthLarge, height= pageHeightLarge, family=fontFamily, paper=pagePaper)
layout(matrix(c(1,1,2,2,3,4), nrow=3,ncol=2,byrow =  TRUE), heights = c(0.6,1,1))
#####To upload a photo in R #### (A)
library(jpeg)
image<- readJPEG("Data/collage.jpg")
pixelWidth <- dim(image)[2]
pixelHeight <- dim(image)[1]
par(mar=c(0,0,0,0))
#Setup a plot region with domain and range from 0 to 2, and no axes or labels
plot(NULL, xlim=c(0,pixelWidth), ylim=c(0,pixelHeight), axes=FALSE,xlab= "" , ylab="", asp= 1)
#Draw the raster image across (half y space and whole x space);
#trial and error based, the photo has long x axis but small y axis
#....rasterImage(image, xleft, ybottom, xright, ytop,)
rasterImage(image, 0,0,pixelWidth,pixelHeight)
mtext("(a)", side = 3, line = -3, adj= 0.09, cex=1.0)
mtext("(b)", side = 3, line = -3, adj= 0.55, cex=1.0)
##For aggspectra (B)
library(pavo)
par(mar=c(5,4,1,1), mgp= c(2.5,1,0))
aggblue<- read.csv("Data/aggblue.csv")
aggvlue <- as.rspec(aggblue)
aggsmooth <- procspec(aggvlue, opt = 'smooth', span= 0.5)
names<- names(aggsmooth)
bysic1 <- gsub("^sample[0-9].",'', names)
aggplot(aggsmooth, bysic1, lwd= 2, lcol= c("red", "royalblue", "black", "seagreen"),
shadecol= c("red", "royalblue", "black", "green"),
xlab= "Wavelength(nm)", ylab= "Reflactance(%)", cex.lab = 1.5, cex.axis= 1.5)
mtext("(c)", side=3, line=0.5, adj=0, cex=1.0)
#Fox chromatic and achratic boxplot (C-D)
blueFunctionData<- read.csv("Data/blueFunctionData.csv")
boxplot(blueFunctionData$chromaticMale, blueFunctionData$chromaticFemale,
ylab=expression('Chromatic discriminability (D'['S']*')'),
names = FALSE, outline= FALSE, cex.lab= 1.5,cex.axis= 1.5,
col= c("lightpink4", "lavenderblush3"), boxwex=0.15,staplewex= 0.3,
at= c(0.1,0.4), ylim= c(0,0.6), xlim= c(0, 0.5), mgp= c(2.5,1,0))
text(0.25, 0.55, "*", cex=2.0)
mtext(c("male", "female"), at= c(0.1, 0.4), side =1, line = 2, cex = 1.5*par()$cex)
mtext("(d)", side=3, line=0.5, adj=0, cex=1.0)
boxplot(blueFunctionData$achromaticMale, blueFunctionData$achromaticFemale,
ylab=expression('Achromatic discriminability (D'['L']*')'), names = FALSE, outline= FALSE,
col= c("lightpink4", "lavenderblush3"), cex.lab = 1.5,cex.axis= 1.5,
boxwex=0.15,staplewex= 0.3, at= c(0.1,0.4), ylim= c(0,0.8), xlim= c(0, 0.5), mgp= c(2.5,1,0))
mtext(c("male", "female"), at= c(0.1, 0.4), side =1, line = 2, cex = 1.5*par()$cex)
mtext("(e)", side=3, line=0.5, adj=0, cex=1.0)
dev.off()
source('~/.active-rstudio-document')
pageWidthLarge<- 7.08661
pageHeightLarge <- paperWidthLarge * 1.5
pagePaper <- 'special'
fontFamily <- 'Times'
layout(matrix(c(1,1,2,2,3,4), nrow=3,ncol=2,byrow =  TRUE), heights = c(0.6,1,1))
#####To upload a photo in R #### (A)
library(jpeg)
image<- readJPEG("Data/collage.jpg")
pixelWidth <- dim(image)[2]
pixelHeight <- dim(image)[1]
par(mar=c(0,0,0,0))
#Setup a plot region with domain and range from 0 to 2, and no axes or labels
plot(NULL, xlim=c(0,pixelWidth), ylim=c(0,pixelHeight), axes=FALSE,xlab= "" , ylab="", asp= 1)
#Draw the raster image across (half y space and whole x space);
#trial and error based, the photo has long x axis but small y axis
#....rasterImage(image, xleft, ybottom, xright, ytop,)
rasterImage(image, 0,0,pixelWidth,pixelHeight)
mtext("(a)", side = 3, line = -3, adj= 0.09, cex=1.0)
mtext("(b)", side = 3, line = -3, adj= 0.55, cex=1.0)
##For aggspectra (B)
library(pavo)
par(mar=c(5,4,1,1), mgp= c(2.5,1,0))
aggblue<- read.csv("Data/aggblue.csv")
aggvlue <- as.rspec(aggblue)
aggsmooth <- procspec(aggvlue, opt = 'smooth', span= 0.5)
names<- names(aggsmooth)
bysic1 <- gsub("^sample[0-9].",'', names)
aggplot(aggsmooth, bysic1, lwd= 2, lcol= c("red", "royalblue", "black", "seagreen"),
shadecol= c("red", "royalblue", "black", "green"),
xlab= "Wavelength(nm)", ylab= "Reflactance(%)", cex.lab = 1.5, cex.axis= 1.5)
mtext("(c)", side=3, line=0.5, adj=0, cex=1.0)
#Fox chromatic and achratic boxplot (C-D)
blueFunctionData<- read.csv("Data/blueFunctionData.csv")
boxplot(blueFunctionData$chromaticMale, blueFunctionData$chromaticFemale,
ylab=expression('Chromatic discriminability (D'['S']*')'),
names = FALSE, outline= FALSE, cex.lab= 1.5,cex.axis= 1.5,
col= c("lightpink4", "lavenderblush3"), boxwex=0.15,staplewex= 0.3,
at= c(0.1,0.4), ylim= c(0,0.6), xlim= c(0, 0.5), mgp= c(2.5,1,0))
text(0.25, 0.55, "*", cex=2.0)
mtext(c("male", "female"), at= c(0.1, 0.4), side =1, line = 2, cex = 1.5*par()$cex)
mtext("(d)", side=3, line=0.5, adj=0, cex=1.0)
boxplot(blueFunctionData$achromaticMale, blueFunctionData$achromaticFemale,
ylab=expression('Achromatic discriminability (D'['L']*')'), names = FALSE, outline= FALSE,
col= c("lightpink4", "lavenderblush3"), cex.lab = 1.5,cex.axis= 1.5,
boxwex=0.15,staplewex= 0.3, at= c(0.1,0.4), ylim= c(0,0.8), xlim= c(0, 0.5), mgp= c(2.5,1,0))
mtext(c("male", "female"), at= c(0.1, 0.4), side =1, line = 2, cex = 1.5*par()$cex)
mtext("(e)", side=3, line=0.5, adj=0, cex=1.0)
?chisq.test
ct <- matrix(c(27,13), ncol=2)
colnames(ct1) <- c("0", "1")
R1 = c(27, 13)
R2 = c(13, 27)
rows   = 2
Matriz = matrix(c(R1, R2),
nrow=rows,
byrow=TRUE)
rownames(Matriz) = c("noblue", "blue")
colnames(Matriz) = c("tandem", "notandem")
Matriz
chisq.test(Matriz,correct=TRUE)
R1 = c(27, 13)
R2 = c(13, 27)
rows   = 2
Matriz = matrix(c(R1, R2),
nrow=rows,
byrow=TRUE)
rownames(Matriz) = c("manipulated", "control")
colnames(Matriz) = c("tandem", "notandem")
Matriz
R1 = c(27, 13)
R2 = c(13, 27)
rows   = 2
Matriz = matrix(c(R1, R2),
nrow=rows,
byrow=TRUE)
rownames(Matriz) = c("control", "manipulated")
colnames(Matriz) = c("tandem", "notandem")
Matriz
chisq.test(Matriz,correct=TRUE)
R1 = c(27, 13)
R2 = c(13, 27)
data = matrix(c(R1, R2), nrow= 2, byrow=TRUE)
rownames(Matriz) = c("control", "manipulated")
colnames(Matriz) = c("tandem", "notandem")
data
R1 = c(27, 13)
R2 = c(13, 27)
data = matrix(c(R1, R2), nrow= 2, byrow=TRUE)
rownames(data) = c("control", "manipulated")
colnames(data) = c("tandem", "notandem")
data
chisq.test(Matriz,correct=TRUE)
R1 = c(27, 13)
R2 = c(13, 27)
data = matrix(c(R1, R2), nrow= 2, byrow=TRUE)
rownames(data) = c("control", "manipulated")
colnames(data) = c("mate", "nomate")
chisq.test(Matriz,correct=TRUE)
R1 = c(27, 13)
R2 = c(13, 27)
data = matrix(c(R1, R2), nrow= 2, byrow=TRUE)
rownames(data) = c("control", "manipulated")
colnames(data) = c("mate", "nomate")
chisq.test(data,correct=TRUE)
observed = c(27, 13)        # observed frequencies
expected = c(0.5, 0.5)      # expected proportions
chisq.test(x = observed,
p = expected)
observed = c(13, 27)        # observed frequencies
expected = c(0.5, 0.5)      # expected proportions
chisq.test(x = observed,
p = expected)
observed = c(22,18)        # observed frequencies
expected = c(0.5, 0.5)      # expected proportions
chisq.test(x = observed,
p = expected)
chisq.test()
?chisq.test()
observed = c(27, 13)        # observed frequencies
expected = c(0.5, 0.5)      # expected proportions
chisq.test(x = observed, p = expected)
Chi-squared test for given probabilities
data:  observed
X-squared = 4.9, df = 1, p-value = 0.02686
observed = c(27, 13)        # observed frequencies
expected = c(0.5, 0.5)      # expected proportions
chisq.test(x = observed, p = expected)
R1 = c(27, 13)
R2 = c(13, 27)
data = matrix(c(R1, R2), nrow= 2, byrow=TRUE)
rownames(data) = c("control", "manipulated")
colnames(data) = c("mate", "nomate")
chisq.test(data,correct=TRUE)
R1 = c(27, 13)
R2 = c(13, 27)
data = matrix(c(R1, R2), nrow= 2, byrow=TRUE)
rownames(data) = c("control", "manipulated")
colnames(data) = c("mate", "nomate")
data
R1 = c(27, 13)
R2 = c(13, 27)
data = matrix(c(R1, R2), nrow= 2, byrow=TRUE)
rownames(data) = c("control", "manipulated")
colnames(data) = c("mate", "nomate")
data
chisq.test(data,correct=TRUE)
R1 = c(27, 13)
R2 = c(13, 27)
data = matrix(c(R1, R2), nrow= 2, byrow=TRUE)
rownames(data) = c("control", "manipulated")
colnames(data) = c("mate", "nomate")
data
chisq.test(data,correct=FALSE)
chisq.test(data,correct=TRUE)$expected
chisq.test(data,correct=FALSE)$expected
chisq.test(data)
chisq.test(data, correct = FALSE)
R1 = c(27, 13)
R2 = c(13, 27)
data = matrix(c(R1, R2), nrow= 2, byrow=TRUE)
rownames(data) = c("control", "manipulated")
colnames(data) = c("mate", "nomate")
data
chisq.test(data, correct = FALSE)
R1 = c(27, 13)
R2 = c(13, 27)
data = matrix(c(R1, R2), nrow= 2, byrow=TRUE)
rownames(data) = c("control", "S8-9 manipulated")
colnames(data) = c("mate", "nomate")
data
chisq.test(data, correct = FALSE)
R1 = c(22, 18)
R2 = c(18, 22)
data = matrix(c(R1, R2), nrow= 2, byrow=TRUE)
rownames(data) = c("control", "S4 manipulated")
colnames(data) = c("mate", "nomate")
data
chisq.test(data, correct = FALSE)
R1 = c(31, 32)
R2 = c(33, 30)
data = matrix(c(R1, R2), nrow= 2, byrow=TRUE)
rownames(data) = c("control", "manipulated")
colnames(data) = c("mate", "nomate")
data
chisq.test(data, correct = FALSE)
R1 = c(17, 14)
R2 = c(14, 33)
data = matrix(c(R1, R2), nrow= 2, byrow=TRUE)
rownames(data) = c("control", "manipulated")
colnames(data) = c("mate", "nomate")
data
chisq.test(data, correct = FALSE)
R1 = c(17, 14)
R2 = c(14, 19)
data = matrix(c(R1, R2), nrow= 2, byrow=TRUE)
rownames(data) = c("control", "manipulated")
colnames(data) = c("mate", "nomate")
data
chisq.test(data, correct = FALSE)
?png
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
